import { type NextPage } from 'next'
import Head from 'next/head'
import Link from 'next/link'
import React, { useState } from 'react'

import { trpc } from '../utils/api'

interface FormData {
    title: string,
    description: string,
}

const NewNote: NextPage = () => {

    const utils = trpc.useContext();
    const addNewNote = trpc.mynotes.newNote.useMutation({
        // onMutate: async () => {
        //     await utils.mynotes.allNotes.cancel();
        //     const optimisticUpdate = utils.mynotes.allNotes.getData();
        //     if (optimisticUpdate) {
        //         utils.mynotes.allNotes.setData(undefined, optimisticUpdate);
        //     }
        // },
        onSettled: async () => {
            await utils.mynotes.allNotes.invalidate();
        },
    });


    const [data, setData] = useState<FormData>({
        title: "",
        description: "",
    })

    const handleSubmit = (e: React.FormEvent<HTMLFormElement>) => {
        e.preventDefault();
        console.log(data);
        addNewNote.mutate({
            title: data.title,
            description: data.description
        });
        setData({
            title: "",
            description: ""
        })
    }

    const handleInput = (e: React.ChangeEvent<HTMLInputElement | HTMLTextAreaElement>) => {
        const { value, name, id } = e.target;
        setData({
            ...data,
            [name]: value,
        })
    }

    return (
        <>
            <Head>
                <title>Create T3 App</title>
                <meta name="description" content="Generated by create-t3-app" />
                <link rel="icon" href="/favicon.ico" />
            </Head>
            <main className='flex min-h-screen flex-col items-center justify-center bg-gradient-to-b from-[#2e026d] to-[#15162c] mx-auto flex min-h-screen flex-col justify-center py-10'>
                <Link
                    className='indigo-700 inline-block py-4 text-base font-semibold leading-7 text-green-700 text'
                    href='/'
                >
                    Go back
                </Link>
                <h1 className='mb-6 text-left text-3xl font-bold tracking-tight text-gray-400'>
                    Add a new note
                </h1>
                <form onSubmit={(event) => handleSubmit(event)}>
                    <input
                        type="text"
                        required
                        value={data.title}
                        name="title"
                        placeholder='your title'
                        onChange={handleInput}
                        className='border-1 mb-2 block w-full rounded-lg border-green-800 bg-neutral-100  px-4 py-2 focus:outline-none'
                    />
                    <textarea
                        required
                        value={data.description}
                        name="description"
                        placeholder="your description"
                        onChange={handleInput}
                        className='border-1 mb-2 block w-full rounded-lg border-green-800 bg-neutral-100  px-4 py-2 focus:outline-none'
                    />
                    <button
                        type='submit'
                        className='block w-full rounded-lg bg-green-600 px-4 py-1.5 text-base font-semibold leading-7 text-white shadow-sm ring-1 ring-green-600 hover:bg-green-600 hover:ring-green-700'
                    >
                        Add a note
                    </button>
                </form>
            </main>
        </>
    )
}

export default NewNote
